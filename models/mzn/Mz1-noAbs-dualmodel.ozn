output [""++format([S,M,L,N])++"\n"++format(obj)++"\n"++format(pfc)++"\n"];
set of int: Cavities = 1..26;
int: b = 6;
set of int: CableStarts = 1..6;
array [1..19,1..2] of int: SoftAtomicConstraints = [|2,1|4,3|6,5|23,7|15,8|17,9|19,10|21,11|25,12|14,13|18,15|8,16|9,18|10,20|20,21|11,22|7,24|24,25|12,26|];
array [Cavities] of int: pfc;
int: S;
int: M;
int: diff1 = if b==0 then 0 else max([pfc[i]-pfc[i+b] | i in CableStarts, ]) endif;
int: diff2 = if b==0 then 0 else max([pfc[i+b]-pfc[i] | i in CableStarts, ]) endif;
int: L = if b==0 then 0 else max(diff1,diff2)-1 endif;
int: N = sum([bool2int(pfc[SoftAtomicConstraints[i,1]] > pfc[SoftAtomicConstraints[i,2]]) | i in index_set_1of2(SoftAtomicConstraints), ]);
int: obj;
