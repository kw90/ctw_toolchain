output [""++format([S,M,L,N])++"\n"++format(obj)++"\n"++format(pfc)++"\n"];
set of int: Cavities = 1..20;
int: b = 10;
set of int: CableStarts = 1..10;
array [1..12,1..2] of int: SoftAtomicConstraints = [|5,1|14,7|11,8|15,9|19,10|7,12|4,13|8,15|20,17|6,18|18,19|16,20|];
array [Cavities] of int: pfc;
array [int] of bool: vio_abs = [pfc[i]-pfc[i+b] > 1 \/ pfc[i+b]-pfc[i] > 1 | i in CableStarts, ];
int: S = if b==0 then 0 else sum(vio_abs) endif;
int: M;
int: L = if b==0 then 0 else max([abs(pfc[i]-pfc[i+b])-1 | i in CableStarts, ]) endif;
array [int] of bool: vio = [pfc[SoftAtomicConstraints[i,1]]>=pfc[SoftAtomicConstraints[i,2]] | i in index_set_1of2(SoftAtomicConstraints), ];
int: N = sum(vio);
int: obj;
